steps:
- id: 'GoSec Security Checks'
  name: "securego/gosec"
  args: 
  - ./...
  - -no-fail       #don't fail the build in this step

#env: ['GOPATH=app']
#   env:
#   - 'GO111MODULE=on'
#   args:
#   - -no-fail #don't fail the build
#   - ./...  

- id: 'Sonarqube Quality Check'
  name: "gcr.io/famous-palisade-356103/sonar-scanner:latest"   
  args: 
    - "-Dsonar.host.url=https://sonarqube.cloud.korewireless.com"
    - "-Dsonar.login=a902b22d7e41d5b9ec9e983c6e17cde783053e4d"
    - "-Dsonar.projectKey=gcp-device-mgmnt"
    - "-Dsonar.sources=."
  
# #steps:     
# - id: 'Docker Build'
#   name: gcr.io/cloud-builders/docker
#   args: [
#     'build', 
#     '-t', 
#     'asia-east1-docker.pkg.dev/famous-palisade-356103/device-management/device-mgr:$REVISION_ID',
#      '-t',
#      'gcr.io/famous-palisade-356103/device-mngr:latest',
#      '.'
#    ]
# #dir: 'my-app-vue'
# # Step 2.2
# - id: 'Push to Google ACR'
#   name: gcr.io/cloud-builders/docker
#   args: [
#     'push', 
#     'asia-east1-docker.pkg.dev/famous-palisade-356103/device-management/device-mgr:$REVISION_ID'
#   ]
# # Step 3
# - id: 'Deploy to K8s'
#   name: 'gcr.io/cloud-builders/kubectl'
#   args: ['apply', '-f', 'k8s/']
#   #args: ['apply', '-f', '*.yaml']
#   env:
#   - 'CLOUDSDK_COMPUTE_ZONE=asia-east1-a'
#   - 'CLOUDSDK_CONTAINER_CLUSTER=device-manager'
# # Step 4
# - id: 'K8s deployment Image Replace'
#   name: 'gcr.io/cloud-builders/kubectl'
#   args: [
#     'set', 
#     'image', 
#     'deployment', 
#     'device-manager', 
#     'devicemngr=asia-east1-docker.pkg.dev/famous-palisade-356103/device-management/device-mgr:$REVISION_ID'
#   ]
#   env:
#   - 'CLOUDSDK_COMPUTE_ZONE=asia-east1-a'
#   - 'CLOUDSDK_CONTAINER_CLUSTER=device-manager'
# # Push the image to Google Container Registry with the latest tag
# images: [
#     'asia-east1-docker.pkg.dev/famous-palisade-356103/device-management/device-mgr:$REVISION_ID'
#   ]
